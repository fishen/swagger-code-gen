{{#config.imports}}
{{{.}}}
{{/config.imports}}
import config from './config';

export type $Select<T, K> = K extends keyof T ? T[K] : T;
export type $Optional<T, K extends keyof any> = Omit<T, K> & {
    [P in Extract<K, keyof T>]?: T[P];
}
export type $Required<T> = {
    [P in keyof T]-?: $Required<T[P]>;
}
export type KeyValue<K, V> = {
    key: K;
    value: V;
}

//#region Definitions

{{#definitions}}
/**
 * {{{title}}}
 **/
interface {{&type}}{{#genericProperties.length}}<{{#genericProperties}}T{{&.}} = any,{{/genericProperties}}>{{/genericProperties.length}} {
    {{#properties}}
    /**
     * {{{description}}}.{{{originTitle}}}
     {{#default}}
     * @default {{{default}}}
     {{/default}}
     {{#example}}
     * @example {{{example}}}
     {{/example}}
     {{#deprecated}}
     * @deprecated
     {{/deprecated}}
     **/
    {{#config.securePropertyName}}'{{/config.securePropertyName}}{{&name}}{{#config.securePropertyName}}'{{/config.securePropertyName}}{{^required}}?{{/required}}: {{#generic}}T{{&name}}{{#isArray}}[]{{/isArray}}{{/generic}}{{^generic}}{{&type}}{{/generic}};
    {{/properties}}
}
{{/definitions}} 

{{#methods}}
{{#parameters}}
{{^referenced}}
{{#properties.length}}
interface {{&typeName}} {
    {{#properties}}
    /**
     * {{{description}}}
     {{#default}}
     * @default {{&default}}
     {{/default}}
     {{#deprecated}}
     * @deprecated
     {{/deprecated}}
     **/
    {{#config.securePropertyName}}'{{/config.securePropertyName}}{{&name}}{{#config.securePropertyName}}'{{/config.securePropertyName}}{{^required}}?{{/required}}: {{&type}};
    {{/properties}}
}
{{/properties.length}}
{{/referenced}}
{{/parameters}}
{{/methods}}
//#endregion

//#region Functions

// {{{info.title}}}
// {{{info.version}}}
// http://{{&host}}{{&basePath}}swagger-ui.html
{{#methods}}

/**
 * {{{summary}}}
{{#parameters}}
 * @param {{{name}}} {{{description}}}
{{/parameters}}
{{#deprecated}}
 * @deprecated
{{/deprecated}}
 */
export function {{{name}}}({{#parameters}}{{{name}}}{{^required}}?{{/required}}: {{&type}}, {{/parameters}}): Promise<{{{response}}}> {
    const url = `{{{url}}}`;
    return config.request({ url, method: '{{&method}}', {{#parameters}}{{#passable}}{{{name}}}, {{/passable}}{{/parameters}}});
}
{{/methods}}
//#endregion