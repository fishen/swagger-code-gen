{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"lodash\"","webpack:///./src/generator.ts","webpack:///external \"path\"","webpack:///external \"fs-extra\"","webpack:///./src/property.ts","webpack:///./src/index.ts","webpack:///external \"mustache\"","webpack:///external \"node-fetch\"","webpack:///./src/definition.ts","webpack:///./src/method.ts","webpack:///./src/param.ts","webpack:///./src/config.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"tslib\");","module.exports = require(\"lodash\");","import fs from 'fs-extra';\r\nimport mustache from 'mustache';\r\nimport _ from 'lodash';\r\nimport fetch from 'node-fetch';\r\nimport path from 'path';\r\nimport { IConfig } from './config';\r\nimport { Definition } from './definition';\r\nimport { Method } from './method';\r\n\r\nexport class Generator {\r\n    genericTypes = new Map();\r\n    config: IConfig;\r\n    constructor(config: IConfig) {\r\n        this.config = config;\r\n        this.config.defaults = Array.isArray(this.config.defaults) ? this.config.defaults : [];\r\n    }\r\n\r\n    static render(view: object, template: string, filename: string, config: IConfig) {\r\n        const content = mustache.render(fs.readFileSync(template, 'utf-8'), view);\r\n        const destination = path.join(config.destination, filename);\r\n        return fs.ensureFile(destination).then(() => fs.writeFile(destination, content));\r\n    }\r\n\r\n    static getType(item: { type?: string, $ref?: string, items?: object, schema?: object }, config: IConfig): string {\r\n        if (!item) return 'void';\r\n        const { type, $ref, items, schema } = item;\r\n        if (schema) {\r\n            return Generator.getType(schema, config);\r\n        } else if (type in config.typeMappings) {\r\n            return config.typeMappings[type];\r\n        } else if ($ref) {\r\n            return Generator.getType({ type: $ref.split('/').pop() }, config);\r\n        } else if (type === 'array') {\r\n            return `${Generator.getType(items, config)}[]`;\r\n        } else if (/«.+»$/.test(type)) {\r\n            const start = type.indexOf('«');\r\n            const end = type.lastIndexOf('»');\r\n            const genericType = type.substr(0, start);\r\n            const genericArgType = type.substring(start + 1, end);\r\n            let genericArgTypes = [];\r\n            if (/«.+»$/.test(genericArgType)) {\r\n                genericArgTypes = [Generator.getType({ type: genericArgType }, config)];\r\n            } else {\r\n                genericArgTypes = genericArgType.split(',').map(type => Generator.getType({ type }, config));\r\n            }\r\n            return `${Generator.getType({ type: genericType }, config)}<${genericArgTypes.join(', ')}>`;\r\n        }\r\n        return type;\r\n    }\r\n    generate() {\r\n        const { source, templates, rename } = this.config;\r\n        if (!source) throw new Error(\"The option 'source' is required\");\r\n        return fetch(source)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                const definitions = Definition.parse(json, this.config);\r\n                definitions.filter(d => d.generic && !this.config.systemGenericTypes.includes(d.name) && d.properties)\r\n                    .forEach(d => {\r\n                        const def = definitions.find(x => x.title === d.name);\r\n                        if (def) {\r\n                            if (def.genericProperties) return;\r\n                            const properties = d.properties.filter(p => p.otherType).map(p => p.name);\r\n                            def.genericProperties = properties;\r\n                            def.properties.filter(d => properties.includes(d.name)).forEach(p => p.generic = true);\r\n                        } else {\r\n                            const genericProperties = d.properties.filter(d => d.otherType).map(p => p.name);\r\n                            d.properties.filter(d => genericProperties.includes(d.name)).forEach(p => p.generic = true);\r\n                            definitions.push({ ...d, genericProperties, title: d.name, type: d.name, generic: false })\r\n                        }\r\n                    });\r\n                return {\r\n                    ...json,\r\n                    methods: Method.parse({ ...json }, definitions, this.config),\r\n                    definitions: definitions.filter(d => !d.generic),\r\n                    config: this.config\r\n                }\r\n            })\r\n            .then(view => Generator.render(view, templates.type, rename.file({ name: this.config.name }), this.config))\r\n    }\r\n}","module.exports = require(\"path\");","module.exports = require(\"fs-extra\");","import { ISwaggerDefinitionProperty } from './swagger';\r\nimport { IConfig } from './config';\r\nimport { Generator } from './generator';\r\n\r\n\r\nexport class Property {\r\n    name: string;\r\n    type: string;\r\n    description: string;\r\n    default: any;\r\n    example: string;\r\n    deprecated: boolean;\r\n    required: boolean;\r\n    generic: boolean;\r\n    otherType: boolean;\r\n    constructor(data: ISwaggerDefinitionProperty & { name: string, default?: any, required?: any }, config: IConfig) {\r\n        this.name = data.name;\r\n        this.type = Generator.getType(data, config);\r\n        this.description = data.description;\r\n        this.default = data.default;\r\n        this.example = data.example;\r\n        // this.deprecated = data.deprecated;\r\n        this.required = data.required;\r\n        this.generic = false;\r\n        this.otherType = !!(data.$ref || data.type === 'array' && data.items.$ref);\r\n    }\r\n}","import path from 'path';\r\nimport _ from 'lodash';\r\nimport { Generator } from './generator';\r\nimport { IHttp } from './http';\r\nimport fs from 'fs-extra';\r\nimport { IConfig, defaultConfig } from './config';\r\n\r\nfunction merge(obj: any, ...args: any) {\r\n    function customizer(objValue: any, srcValue: any) {\r\n        if (_.isArray(objValue)) {\r\n            return objValue.concat(srcValue);\r\n        }\r\n    }\r\n    return _.mergeWith(obj, ...args, customizer);\r\n}\r\n\r\nexport function generate(config: Record<string, IConfig>) {\r\n    const configurations = Object.keys(config)\r\n        .filter(name => name !== 'common')\r\n        .map(name => merge({}, defaultConfig, config.common, config[name], { name }));\r\n    const promises = configurations.map(cfg => new Generator(cfg).generate());\r\n    return Promise.all(promises).then(() => {\r\n        const cfg = merge(defaultConfig, config.common);\r\n        const apis = configurations.map(cfg => ({\r\n            module: path.basename(cfg.rename.file(cfg), '.ts'),\r\n            classname: cfg.rename.class(cfg),\r\n        }));\r\n        fs.copyFileSync(path.resolve(__dirname, './templates/type.ts'), path.join(cfg.destination, 'type.ts'))\r\n        return Generator.render({ apis }, cfg.templates.index, 'index.ts', cfg)\r\n    }).catch(console.error);\r\n}\r\n\r\nexport type {\r\n    IConfig,\r\n    IHttp\r\n}","module.exports = require(\"mustache\");","module.exports = require(\"node-fetch\");","import { Property } from './property';\r\nimport { IConfig } from './config';\r\nimport { Generator } from './generator';\r\nimport { ISwagger, ISwaggerDefinition } from './swagger';\r\nimport _ from 'lodash';\r\n\r\nexport class Definition {\r\n    title: string;\r\n    type: string;\r\n    generic: boolean;\r\n    name: string;\r\n    basePath: string;\r\n    host: string;\r\n    properties?: Property[];\r\n    genericProperties?: string[];\r\n    constructor(data: ISwaggerDefinition, config: IConfig) {\r\n        this.title = data.title;\r\n        this.type = Generator.getType({ type: this.title }, config);\r\n        this.generic = /<.+>$/.test(this.type);\r\n        this.name = this.generic ? this.type.substr(0, this.type.indexOf('<')) : this.type;\r\n        if (data.properties) {\r\n            this.properties = Object.keys(data.properties).map((name) => new Property({ ...data.properties[name], name }, config))\r\n            this.properties.forEach(p => p.required = _.includes(data.required, p.name));\r\n        }\r\n    }\r\n\r\n    static parse(swagger: ISwagger, config: IConfig) {\r\n        const ignoreds = config.ignores && config.ignores.definitions;\r\n        return Object.keys(swagger.definitions)\r\n            .filter(title => !ignoreds || !ignoreds.includes(title))\r\n            .map((title) => new Definition({ ...swagger.definitions[title], title }, config));\r\n    }\r\n}","import { Param } from './param';\r\nimport { IConfig } from './config';\r\nimport _ from 'lodash';\r\nimport { Generator } from './generator';\r\nimport { ISwagger, ISwaggerPath } from './swagger';\r\nimport { Definition } from './definition';\r\n\r\nexport class Method {\r\n    method: string;\r\n    path: string;\r\n    url: string;\r\n    deprecated: boolean;\r\n    operationId: string;\r\n    summary: string;\r\n    tags?: string[];\r\n    name: string;\r\n    parameters: Param[];\r\n    defaults?: { key: string, value: string[] }[];\r\n    response: string;\r\n    constructor(data: ISwaggerPath & { path: string, method: string }, config: IConfig, swagger: ISwagger) {\r\n        this.method = data.method;\r\n        this.path = data.path;\r\n        this.url = `${swagger.basePath}/${data.path}`.replace(/\\/+/g, '/');\r\n        if (config.host !== false) {\r\n            let { host, scheme } = config;\r\n            host = _.isString(host) ? host : swagger.host;\r\n            scheme = _.isString(scheme) ? scheme : (swagger.schemes && swagger.schemes[0]) || 'https';\r\n            this.url = host && scheme ? `${scheme}://${host}${this.url}` : this.url;\r\n        }\r\n        this.deprecated = data.deprecated;\r\n        this.operationId = data.operationId;\r\n        this.summary = data.summary;\r\n        this.tags = data.tags;\r\n        const resSchema = data.responses[200] && data.responses[200].schema;\r\n        this.response = Generator.getType(resSchema, config);\r\n        if (_.isFunction(config.rename.response)) {\r\n            this.response = config.rename.response({ type: this.response });\r\n        }\r\n        this.name = config.rename.method(this);\r\n        this.parameters = Param.from(this, data.parameters, config);\r\n        this.parameters.filter(p => p.in === 'path')\r\n            .map(p => new RegExp(`\\{(${p.name})\\}`, 'g'))\r\n            .forEach(reg => this.url = this.url.replace(reg, \"${$1}\"));\r\n    }\r\n    setDefault(param: Param, defaults: string[]) {\r\n        if (!Array.isArray(param.properties)) return;\r\n        const defaultNames = param.properties.filter(p => defaults.includes(p.name)).map(p => p.name);\r\n        if (!defaultNames.length) return;\r\n        param.type = `$Optional<${param.type}, ${defaultNames.map(p => `'${p}'`).join(' | ')}>`;\r\n        this.defaults = this.defaults || [];\r\n        this.defaults.push({ key: param.in, value: defaultNames });\r\n    }\r\n    static parse(swagger: ISwagger, definitions: Definition[], config: IConfig): Method[] {\r\n        const methods = Object.keys(swagger.paths)\r\n            .reduce((result, path) => {\r\n                const value = swagger.paths[path];\r\n                Object.keys(value).map(method => {\r\n                    const m = new Method({ method, path, ...value[method] }, config, swagger);\r\n                    m.parameters.forEach((param) => {\r\n                        if (param.in === 'body') {\r\n                            const d = definitions.find(d => d.type === param.type);\r\n                            param.properties = d && d.properties;\r\n                        }\r\n                        m.setDefault(param, config.defaults);\r\n                    })\r\n                    for (let index = m.parameters.length - 1; index >= 0; index--) {\r\n                        const p = m.parameters[index];\r\n                        const defaults = m.defaults && m.defaults.find(x => x.key === p.in);\r\n                        p.required = !p.properties || p.properties.some(p => p.required && (!defaults || !defaults.value.includes(p.name)));\r\n                        p.required = p.required ? p.required : !m.parameters.slice(index).every(p => !p.required);\r\n                    }\r\n                    result.push(m);\r\n                });\r\n                return result;\r\n            }, []);\r\n        return methods;\r\n\r\n    }\r\n}\r\n","import { Property } from './property';\r\nimport { Method } from './method';\r\nimport { IConfig } from './config';\r\nimport { Generator } from './generator';\r\nimport _ from 'lodash';\r\nimport { ISwaggerPathParameter, ParamType } from './swagger';\r\n\r\ntype Required<T> = {\r\n    [P in keyof T]-?: Required<T[P]>;\r\n};\r\n\r\nexport class Param {\r\n    name: string;\r\n    type: string;\r\n    in: ParamType;\r\n    properties: Property[];\r\n    typeName: string;\r\n    referenced: boolean;\r\n    required?: boolean;\r\n    description?: string;\r\n    passable: boolean;\r\n    constructor(data: Partial<Param>) {\r\n        Object.assign(this, data);\r\n        this.typeName = data.type;\r\n        this.referenced = data.in === 'body';\r\n        this.passable = data.in !== 'path';\r\n        this.description = this.description || `The http request ${data.in} parameters.`;\r\n    }\r\n\r\n    static from(method: Method, params: ISwaggerPathParameter[], config: IConfig) {\r\n        const { ignores } = config;\r\n        if (ignores) {\r\n            params = params.filter(x => !(x.in in ignores && ignores[x.in].includes(x.name)));\r\n        }\r\n        let result: Param[] = [];\r\n        const groupedParams = _.groupBy(params, 'in');\r\n        const parameters = Object.keys(groupedParams).reduce((r: Record<string, Param>, key) => {\r\n            if (key === 'path') {\r\n                const paths = groupedParams[key];\r\n                result = paths.map(p => new Param({ ...p, type: Generator.getType(p, config) }));\r\n            } else if (key === 'body') {\r\n                const p = groupedParams[key][0];\r\n                r[key] = new Param({ name: key, in: key, type: Generator.getType(p, config) });\r\n            } else {\r\n                const properties = groupedParams[key].map(v => new Property(v, config));\r\n                const type = config.rename.parameter({ method: method.name, type: key });\r\n                r[key] = new Param({ name: key, in: key as any, type, properties });\r\n            }\r\n            return r;\r\n        }, {});\r\n        const header = new Param({ name: 'header', type: 'object', in: 'header', properties: [] });\r\n        parameters.header = parameters.header || header;\r\n        // sort params\r\n        ['query', 'body', 'header'].filter(x => x in parameters).forEach(key => result.push(parameters[key]));\r\n        return result;\r\n    }\r\n}","import path from 'path';\r\nimport _ from 'lodash';\r\n\r\nexport interface IConfig {\r\n    /**\r\n     * Dependency injection configuration\r\n     */\r\n    injection?: Record<string, string>;\r\n    /**\r\n     * Code generation directory\r\n     * @default ./apis\r\n     */\r\n    destination?: string;\r\n    /**\r\n     * The service's class decorators\r\n     */\r\n    decorators?: string[];\r\n    /**\r\n     * The default param keys which wiil be get by http.getDefaultValue.\r\n     */\r\n    defaults?: string[];\r\n    /**\r\n     * Naming convention\r\n     */\r\n    rename?: Partial<Record<'method' | 'parameter' | 'response' | 'class' | 'file', (...args: any) => string>>;\r\n    /**\r\n     * Code template files\r\n     */\r\n    templates?: Partial<Record<'type' | 'index', string>>;\r\n    /**\r\n     * The items you want to ignore\r\n     */\r\n    ignores?: Partial<Record<'definitions' | 'path' | 'body' | 'header' | 'query', string[]>>;\r\n    /**\r\n     * The modules you want to import\r\n     */\r\n    imports?: string[];\r\n    /**\r\n     * The configuration name\r\n     */\r\n    name?: string;\r\n    /**\r\n     * The OpenAPI specification(JSON) 's resource url.\r\n     * @example https://petstore.swagger.io/v2/swagger.json\"\r\n     */\r\n    source?: string;\r\n    /**\r\n     * The http request host, if the value is false, no host will be added to the url\r\n     * @example petstore.swagger.io\r\n     */\r\n    host?: string | false;\r\n    /**\r\n     * The http request scheme\r\n     * @example https\r\n     */\r\n    scheme?: string;\r\n    /**\r\n     * The system generic types\r\n     */\r\n    systemGenericTypes?: string[];\r\n    /**\r\n     * Custom type mappings\r\n     */\r\n    typeMappings?: Record<string, string>;\r\n}\r\n\r\nexport const defaultConfig: IConfig = {\r\n    destination: './apis',\r\n    injection: {\r\n        module: 'mp-inject',\r\n        injectable: 'injectable',\r\n        inject: 'inject',\r\n        http: \"'http'\",\r\n    },\r\n    imports: [\"import type { IHttp, $Required } from './type';\"],\r\n    rename: {\r\n        method: ({ path, method }) => _.camelCase([method, ...path.split('/')].join('_')),\r\n        parameter: ({ method, type }) => _.upperFirst(method) + _.upperFirst(type),\r\n        response: ({ type }) => {\r\n            const sysBaseTypes = ['void', 'string', 'number', 'boolean', 'object'];\r\n            const isSysType = sysBaseTypes.some(t => t === type || `${t}[]` === type || `Array<${t}>` === type);\r\n            return isSysType ? type : `$Required<${type}>`;\r\n        },\r\n        file: ({ name }) => `${name}-api.ts`,\r\n        class: ({ name }) => _.upperFirst(_.camelCase(name)) + 'API',\r\n    },\r\n    templates: {\r\n        type: path.join(__dirname, 'templates/type.mustache'),\r\n        index: path.join(__dirname, 'templates/index.mustache'),\r\n    },\r\n    systemGenericTypes: ['Set', 'Map', 'WeakMap', 'WeakSet', 'Array', 'Record'],\r\n    typeMappings: {\r\n        \"integer\": \"number\",\r\n        \"List\": \"Array\",\r\n        \"int\": \"number\",\r\n        \"Map\": \"Record\",\r\n        \"bigdecimal\": \"number\",\r\n        \"long\": \"number\",\r\n        \"ref\": \"number\",\r\n    },\r\n}"],"sourceRoot":""}