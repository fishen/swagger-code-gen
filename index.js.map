{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///./src/generator.ts","webpack:///external \"path\"","webpack:///external \"fs-extra\"","webpack:///./src/property.ts","webpack:///./src/index.ts","webpack:///external \"mustache\"","webpack:///external \"node-fetch\"","webpack:///./src/definition.ts","webpack:///./src/method.ts","webpack:///./src/param.ts","webpack:///./src/config.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"lodash\");","import fs from 'fs-extra';\nimport mustache from 'mustache';\nimport _ from 'lodash';\nimport fetch from 'node-fetch';\nimport path from 'path';\nimport { IConfig } from './config';\nimport { Definition } from './definition';\nimport { Method } from './method';\n\nexport class Generator {\n    genericTypes = new Map();\n    config: IConfig;\n    constructor(config: IConfig) {\n        this.config = config;\n    }\n\n    static render(view: any, template: string, filename: string, config: IConfig) {\n        const content = mustache.render(fs.readFileSync(template, 'utf-8'), view);\n        const destination = path.join(config.destination, filename);\n        return fs.ensureFile(destination).then(() => fs.writeFile(destination, content)).then(() => ({\n            data: view,\n            filename,\n            config\n        }));\n    }\n\n    static getType(item: { type?: string, $ref?: string, items?: object, schema?: object }, config: IConfig, definitions: Definition[]): string {\n        if (!item) return 'void';\n        const { type, $ref, items, schema } = item;\n        if (schema) {\n            return Generator.getType(schema, config, definitions);\n        } else if (type in config.typeMappings) {\n            return config.typeMappings[type];\n        } else if ($ref) {\n            return Generator.getType({ type: $ref.replace('#/definitions/', '') }, config, definitions);\n        } else if (type === 'array') {\n            return `${Generator.getType(items, config, definitions)}[]`;\n        } else if (/«.+»$/.test(type)) {\n            return config.typeFormatter(type).replace(/[«,»]/g, '_')\n        } else if (type.endsWith('[]')) {\n            const arrType = type.substr(0, type.indexOf('[]')).trim();\n            return `${Generator.getType({ type: arrType }, config, definitions)}[]`;\n        }\n        return config.typeFormatter(type);\n    }\n    generate() {\n        const { source, templates, rename } = this.config;\n        if (!source) throw new Error(\"The option 'source' is required\");\n        return fetch(source)\n            .then(res => res.json())\n            .then(json => {\n                const definitions = Definition.parse(json, this.config);\n                return {\n                    ...json,\n                    methods: Method.parse({ ...json }, definitions, this.config),\n                    definitions,\n                    config: this.config,\n                }\n            })\n            .then(view => Generator.render(view, templates.type, rename.file({ name: this.config.name }), this.config))\n    }\n}","module.exports = require(\"path\");","module.exports = require(\"fs-extra\");","import { ISwaggerDefinitionProperty } from './swagger';\nimport { IConfig } from './config';\nimport { Generator } from './generator';\nimport { Definition } from 'definition';\n\n\nexport class Property {\n    name: string;\n    type: string;\n    description: string;\n    default: any;\n    example: string;\n    deprecated: boolean;\n    required: boolean;\n    generic: boolean;\n    isArray: boolean;\n    otherType: boolean;\n    constructor(data: ISwaggerDefinitionProperty & { name: string, default?: any, required?: any }, config: IConfig, defs: Definition[]) {\n        this.name = data.name;\n        this.type = Generator.getType(data, config, defs);\n        this.description = data.description;\n        this.default = data.default;\n        this.example = data.example;\n        this.isArray = data.type === 'array';\n        // this.deprecated = data.deprecated;\n        this.required = data.required;\n        this.generic = false;\n        this.otherType = !!(data.$ref || data.type === 'array' && data.items.$ref);\n    }\n}","import path from 'path';\nimport _ from 'lodash';\nimport { Generator } from './generator';\nimport fs from 'fs-extra';\nimport { IConfig, defaultConfig } from './config';\n\nfunction merge(obj: any, ...args: any) {\n    function customizer(objValue: any, srcValue: any) {\n        if (_.isArray(objValue)) {\n            return objValue.concat(srcValue);\n        }\n    }\n    return _.mergeWith(obj, ...args, customizer);\n}\n\nexport function generate(config: Record<string, IConfig>) {\n    const configurations = Object.keys(config)\n        .filter(name => name !== 'common')\n        .map(name => merge({}, defaultConfig, config.common, config[name], { name }));\n    const promises = configurations.map(cfg => new Generator(cfg).generate());\n    const log = (name: string, func: number) => console.log(`${name}:`, `function:${func}`);\n    return Promise.all(promises).then((items) => {\n        const total = items.reduce((total, item) => {\n            log(item.data.config.name, item.data.methods.length);\n            total.func += item.data.methods.length;\n            return total;\n        }, { func: 0, defs: 0 });\n        log('total', total.func);\n        const cfg = merge(defaultConfig, config.common);\n        fs.copyFileSync(path.resolve(__dirname, './templates/config.ts'), path.join(cfg.destination, 'config.ts'))\n    }).catch(console.error);\n}\n\nexport type {\n    IConfig\n}","module.exports = require(\"mustache\");","module.exports = require(\"node-fetch\");","import { Property } from './property';\nimport { IConfig } from './config';\nimport { Generator } from './generator';\nimport { ISwagger, ISwaggerDefinition } from './swagger';\nimport _ from 'lodash';\n\nexport class Definition {\n    title: string;\n    name: string;\n    basePath: string;\n    host: string;\n    properties?: Property[];\n    constructor(data: ISwaggerDefinition, config: IConfig) {\n        this.title = data.title;\n        this.name=Generator.getType({ type: this.title }, config, []);\n        if (data.properties) {\n            this.properties = Object.keys(data.properties).map((name) => new Property({ ...data.properties[name], name }, config, []))\n            this.properties.forEach(p => p.required = _.includes(data.required, p.name));\n        }\n    }\n\n    static parse(swagger: ISwagger, config: IConfig) {\n        const ignoreds = config.ignores && config.ignores.definitions;\n        return Object.keys(swagger.definitions)\n            .filter(title => !ignoreds || !ignoreds.includes(title))\n            .map((title) => new Definition({ ...swagger.definitions[title], title }, config));\n    }\n}","import { Param } from './param';\nimport { IConfig } from './config';\nimport _ from 'lodash';\nimport { Generator } from './generator';\nimport { ISwagger, ISwaggerPath } from './swagger';\nimport { Definition } from './definition';\n\nexport class Method {\n    method: string;\n    path: string;\n    url: string;\n    deprecated: boolean;\n    operationId: string;\n    summary: string;\n    tags?: string[];\n    name: string;\n    parameters: Param[];\n    response: string;\n    constructor(data: ISwaggerPath & { path: string, method: string }, config: IConfig, swagger: ISwagger, definitions: Definition[]) {\n        this.method = data.method;\n        this.path = data.path;\n        this.url = `${swagger.basePath}/${data.path}`.replace(/\\/+/g, '/');\n        if (config.host !== false) {\n            let { host, scheme } = config;\n            host = _.isString(host) ? host : swagger.host;\n            scheme = _.isString(scheme) ? scheme : (swagger.schemes && swagger.schemes[0]) || 'https';\n            this.url = host && scheme ? `${scheme}://${host}${this.url}` : this.url;\n        }\n        this.deprecated = data.deprecated;\n        this.operationId = data.operationId;\n        this.summary = data.summary;\n        this.tags = data.tags;\n        const resSchema = data.responses[200] && data.responses[200].schema;\n        this.response = Generator.getType(resSchema, config, definitions);\n        if (_.isFunction(config.rename.response)) {\n            this.response = config.rename.response({ type: this.response });\n        }\n        this.name = config.rename.method(this);\n        this.parameters = Param.from(this, data.parameters, config, definitions);\n        this.parameters.filter(p => p.in === 'path')\n            .map(p => new RegExp(`\\{(${p.name})\\}`, 'g'))\n            .forEach(reg => this.url = this.url.replace(reg, \"${$1}\"));\n    }\n    static parse(swagger: ISwagger, definitions: Definition[], config: IConfig): Method[] {\n        const methods = Object.keys(swagger.paths)\n            .filter(key => !config.ignores || !config.ignores.path || !(config.ignores.path.includes(key)))\n            .reduce((result, path) => {\n                const value = swagger.paths[path];\n                Object.keys(value).map(method => {\n                    const m = new Method({ method, path, ...value[method] }, config, swagger, definitions);\n                    m.parameters.forEach((param) => {\n                        if (param.in === 'body') {\n                            const d = definitions.find(d => d.name === param.type);\n                            param.properties = d && d.properties;\n                        }\n                    })\n                    for (let index = m.parameters.length - 1; index >= 0; index--) {\n                        const p = m.parameters[index];\n                        p.required = p.required ? p.required : !m.parameters.slice(index).every(p => !p.required);\n                    }\n                    result.push(m);\n                });\n                return result;\n            }, [] as Method[]);\n        return methods;\n    }\n}\n","import { Property } from './property';\nimport { Method } from './method';\nimport { IConfig } from './config';\nimport { Generator } from './generator';\nimport _ from 'lodash';\nimport { ISwaggerPathParameter, ParamType } from './swagger';\nimport { Definition } from 'definition';\n\nexport class Param {\n    name: string;\n    type: string;\n    in: ParamType;\n    properties: Property[];\n    typeName: string;\n    referenced: boolean;\n    required?: boolean;\n    description?: string;\n    passable: boolean;\n    constructor(data: Partial<Param>) {\n        Object.assign(this, data);\n        this.typeName = data.type;\n        this.referenced = data.in === 'body';\n        this.passable = data.in !== 'path';\n        this.description = this.description || `The http request ${data.in} parameters.`;\n    }\n\n    static from(method: Method, params: ISwaggerPathParameter[], config: IConfig, definitions: Definition[]) {\n        const { ignores } = config;\n        if (ignores) {\n            params = params.filter(x => !(x.in in ignores && ignores[x.in].includes(x.name)));\n        }\n        let result: Param[] = [];\n        const groupedParams = _.groupBy(params, 'in');\n        const parameters = Object.keys(groupedParams).reduce((r: Record<string, Param>, key) => {\n            if (key === 'path') {\n                const paths = groupedParams[key];\n                result = paths.map(p => new Param({ ...p, type: Generator.getType(p, config, definitions) }));\n            } else if (key === 'body') {\n                const p = groupedParams[key][0];\n                r[key] = new Param({ name: key, in: key, type: Generator.getType(p, config, definitions) });\n            } else {\n                const properties = groupedParams[key].map(v => new Property(v, config, definitions)).reduce((result, p) => {\n                    if (!result.some(x => p.name === x.name)) {\n                        result.push(p);\n                    }\n                    return result;\n                }, []);\n                const type = config.rename.parameter({ method: method.name, type: key });\n                r[key] = new Param({ name: key, in: key as any, type, properties });\n            }\n            return r;\n        }, {});\n        const header = new Param({ name: 'header', type: 'object', in: 'header', properties: [] });\n        parameters.header = parameters.header || header;\n        // sort params\n        ['query', 'body', 'header'].filter(x => x in parameters).forEach(key => result.push(parameters[key]));\n        return result;\n    }\n}","import path from 'path';\nimport _ from 'lodash';\n\nexport interface IConfig {\n    /**\n     * Code generation directory\n     * @default ./apis\n     */\n    destination?: string;\n    /**\n     * Naming convention\n     */\n    rename?: Partial<Record<'method' | 'parameter' | 'response' | 'file', (...args: any) => string>>;\n    /**\n     * Code template files\n     */\n    templates?: Partial<Record<'type' | 'index', string>>;\n    /**\n     * The items you want to ignore\n     */\n    ignores?: Partial<Record<'definitions' | 'path' | 'body' | 'header' | 'query', string[]>>;\n    /**\n     * The modules you want to import\n     */\n    imports?: string[];\n    /**\n     * The configuration name\n     */\n    name?: string;\n    /**\n     * The OpenAPI specification(JSON) 's resource url.\n     * @example https://petstore.swagger.io/v2/swagger.json\"\n     */\n    source?: string;\n    /**\n     * The http request host, if the value is false, no host will be added to the url\n     * @example petstore.swagger.io\n     */\n    host?: string | false;\n    /**\n     * The http request scheme\n     * @example https\n     */\n    scheme?: string;\n    /**\n     * The system generic types\n     */\n    systemGenericTypes?: string[];\n    /**\n     * The type formatter\n     */\n    typeFormatter?: (t: string) => string;\n    /**\n     * Custom type mappings\n     */\n    typeMappings?: Record<string, string>;\n    /**\n     * Whether to enable the secure property name, the property name will wrapped with double quotes if enabled.\n     */\n    securePropertyName?: boolean;\n}\n\nexport const defaultConfig: IConfig = {\n    destination: './apis',\n    rename: {\n        method({ path, method }) {\n            this.methods = this.methods || Object.create(null);\n            let name = _.camelCase([method, ...path.split('/')].join('_'));\n            let index = 1;\n            const origin = name;\n            while (name in this.methods) {\n                name = origin + index;\n                index++;\n            }\n            this.methods[name] = true;\n            return name;\n        },\n        parameter: ({ method, type }) => _.upperFirst(method) + _.upperFirst(type),\n        response: ({ type }) => {\n            const sysBaseTypes = ['void', 'string', 'number', 'boolean', 'object'];\n            const isSysType = sysBaseTypes.some(t => t === type || `${t}[]` === type || `Array<${t}>` === type);\n            return isSysType ? type : `$Required<${type}>`;\n        },\n        file: ({ name }) => `${name}-api.ts`,\n    },\n    templates: {\n        type: path.join(__dirname, 'templates/type.mustache'),\n        index: path.join(__dirname, 'templates/index.mustache'),\n    },\n    systemGenericTypes: ['Map', 'WeakMap', 'WeakSet', 'Array', 'Record', 'KeyValue'],\n    typeFormatter: ((t: string) => t),\n    typeMappings: {\n        \"integer\": \"number\",\n        \"List\": \"Array\",\n        'Set': \"Array\",\n        \"int\": \"number\",\n        \"Map\": \"Record\",\n        \"bigdecimal\": \"number\",\n        \"long\": \"number\",\n        \"ref\": \"number\",\n        \"Void\": \"void\",\n        \"double\": 'number',\n        \"byte\": \"number\",\n        \"LinkedList\": \"Array\",\n        ArrayList: \"Array\",\n        Collection: \"Array\",\n    },\n}"],"sourceRoot":""}